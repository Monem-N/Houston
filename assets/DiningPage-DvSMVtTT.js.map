{"version":3,"file":"DiningPage-DvSMVtTT.js","sources":["../../node_modules/@mui/icons-material/esm/LocalBar.js","../../src/pages/DiningPage.tsx"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M21 5V3H3v2l8 9v5H6v2h12v-2h-5v-5zM7.43 7 5.66 5h12.69l-1.78 2z\"\n}), 'LocalBar');","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Typography, Box, Container, Grid, Chip, Rating } from '@mui/material';\nimport {\n  Restaurant as RestaurantIcon,\n  LocalCafe as CafeIcon,\n  LocalBar as BarIcon,\n} from '@mui/icons-material';\nimport { Card, PageHeader, Section } from '../components/common';\n\nconst DiningPage: React.FC = () => {\n  const { t } = useTranslation();\n  // Placeholder data for restaurants\n  const restaurants = [\n    {\n      id: 1,\n      name: 'Houston Restaurant 1',\n      type: 'American',\n      rating: 4.5,\n      image: '/assets/images/dining/restaurant1.jpg',\n      description: 'A popular American restaurant with a variety of dishes.',\n      category: 'restaurant',\n    },\n    {\n      id: 2,\n      name: 'Houston Cafe 1',\n      type: 'Cafe',\n      rating: 4.2,\n      image: '/assets/images/dining/cafe1.jpg',\n      description: 'A cozy cafe with great coffee and pastries.',\n      category: 'cafe',\n    },\n    {\n      id: 3,\n      name: 'Houston Bar 1',\n      type: 'Bar & Grill',\n      rating: 4.0,\n      image: '/assets/images/dining/bar1.jpg',\n      description: 'A lively bar with good food and drinks.',\n      category: 'bar',\n    },\n    {\n      id: 4,\n      name: 'Houston Restaurant 2',\n      type: 'Mexican',\n      rating: 4.7,\n      image: '/assets/images/dining/restaurant2.jpg',\n      description: 'Authentic Mexican cuisine in a vibrant atmosphere.',\n      category: 'restaurant',\n    },\n    {\n      id: 5,\n      name: 'Houston Cafe 2',\n      type: 'Bakery',\n      rating: 4.3,\n      image: '/assets/images/dining/cafe2.jpg',\n      description: 'Fresh baked goods and specialty coffees.',\n      category: 'cafe',\n    },\n    {\n      id: 6,\n      name: 'Houston Restaurant 3',\n      type: 'Italian',\n      rating: 4.6,\n      image: '/assets/images/dining/restaurant3.jpg',\n      description: 'Traditional Italian dishes in a family-friendly setting.',\n      category: 'restaurant',\n    },\n  ];\n\n  // Function to get the appropriate icon based on category\n  const getCategoryIcon = (category: string) => {\n    switch (category) {\n      case 'restaurant':\n        return <RestaurantIcon />;\n      case 'cafe':\n        return <CafeIcon />;\n      case 'bar':\n        return <BarIcon />;\n      default:\n        return <RestaurantIcon />;\n    }\n  };\n\n  return (\n    <Container maxWidth=\"lg\">\n      <PageHeader\n        title={t('dining.title', 'Dining')}\n        subtitle={t('dining.subtitle', 'Explore the best dining options in Houston near the FIRST Championship venues.')}\n        data-testid=\"page-title\"\n        breadcrumbs={[{ label: t('navigation.home', 'Home'), path: '/'}, { label: t('navigation.dining', 'Dining') }]}\n      />\n\n      <Section title={t('dining.featuredRestaurants', 'Featured Restaurants')} titleIcon={<RestaurantIcon color=\"primary\" />} divider>\n        <Grid container spacing={3}>\n          {restaurants.map(restaurant => (\n            <Grid item xs={12} sm={6} md={4} key={restaurant.id}>\n              <Card\n                title={t(`dining.restaurants.${restaurant.id}.name`, restaurant.name)}\n                description={t(`dining.restaurants.${restaurant.id}.description`, restaurant.description)}\n                image={restaurant.image}\n                imageAlt={restaurant.name}\n                imageHeight={160}\n              >\n                <Box sx={{ mb: 2 }}>\n                  <Box\n                    sx={{\n                      display: 'flex',\n                      justifyContent: 'space-between',\n                      alignItems: 'center',\n                      mb: 2,\n                    }}\n                  >\n                    <Chip\n                      icon={getCategoryIcon(restaurant.category)}\n                      label={t(`dining.restaurants.${restaurant.id}.type`, restaurant.type)}\n                      size=\"small\"\n                      color={\n                        restaurant.category === 'restaurant'\n                          ? 'primary'\n                          : restaurant.category === 'cafe'\n                            ? 'secondary'\n                            : 'default'\n                      }\n                    />\n\n                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                      <Rating value={restaurant.rating} precision={0.5} readOnly size=\"small\" />\n                      <Typography variant=\"body2\" color=\"text.secondary\" sx={{ ml: 1 }}>\n                        {restaurant.rating}\n                      </Typography>\n                    </Box>\n                  </Box>\n                </Box>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      </Section>\n    </Container>\n  );\n};\n\nexport default DiningPage;\n"],"names":["BarIcon","createSvgIcon","_jsx","DiningPage","t","useTranslation","restaurants","getCategoryIcon","category","RestaurantIcon","CafeIcon","jsxs","Container","jsx","PageHeader","Section","Grid","restaurant","Card","Box","Chip","Rating","Typography"],"mappings":"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","x_google_ignoreList":[0]}