{"version":3,"file":"FavoritesPage-Bu5x7H7C.js","sources":["../../src/store/slices/userPreferencesSlice.ts","../../src/components/common/FavoriteButton/ReduxFavoriteButton.tsx","../../src/components/common/LocationCard/ReduxLocationCard.tsx","../../src/redux/hooks.ts","../../src/pages/FavoritesPage.tsx"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Location } from '../../components/maps/types';\n\n// Define the type for user preferences state\ninterface UserPreferencesState {\n  theme: 'light' | 'dark';\n  favoriteLocations: Location[];\n  isLoaded: boolean;\n}\n\n// Storage keys\nconst THEME_STORAGE_KEY = 'houston_guide_theme';\nconst FAVORITES_STORAGE_KEY = 'houston_guide_favorites';\n\n// Helper function to get theme from localStorage\nconst getInitialTheme = (): 'light' | 'dark' => {\n  try {\n    const savedTheme = localStorage.getItem(THEME_STORAGE_KEY);\n    const prefersDarkMode = window.matchMedia?.('(prefers-color-scheme: dark)')?.matches || false;\n    \n    return (savedTheme === 'light' || savedTheme === 'dark') \n      ? savedTheme \n      : (prefersDarkMode ? 'dark' : 'light');\n  } catch (error) {\n    console.error('Error accessing localStorage for theme:', error);\n    return 'light';\n  }\n};\n\n// Helper function to get favorites from localStorage\nconst getInitialFavorites = (): Location[] => {\n  try {\n    const savedFavorites = localStorage.getItem(FAVORITES_STORAGE_KEY);\n    return savedFavorites ? JSON.parse(savedFavorites) : [];\n  } catch (error) {\n    console.error('Error accessing localStorage for favorites:', error);\n    return [];\n  }\n};\n\n// Initial state\nconst initialState: UserPreferencesState = {\n  theme: 'light', // Default value, will be updated in initializePreferences\n  favoriteLocations: [],\n  isLoaded: false,\n};\n\n// Create the slice\nconst userPreferencesSlice = createSlice({\n  name: 'userPreferences',\n  initialState,\n  reducers: {\n    initializePreferences: (state) => {\n      state.theme = getInitialTheme();\n      state.favoriteLocations = getInitialFavorites();\n      state.isLoaded = true;\n    },\n    toggleTheme: (state) => {\n      state.theme = state.theme === 'light' ? 'dark' : 'light';\n      try {\n        localStorage.setItem(THEME_STORAGE_KEY, state.theme);\n      } catch (error) {\n        console.error('Error saving theme to localStorage:', error);\n      }\n    },\n    addFavorite: (state, action: PayloadAction<Location>) => {\n      const location = action.payload;\n      // Check if already in favorites\n      if (!state.favoriteLocations.some(fav => fav.id === location.id)) {\n        state.favoriteLocations.push(location);\n        try {\n          localStorage.setItem(FAVORITES_STORAGE_KEY, JSON.stringify(state.favoriteLocations));\n        } catch (error) {\n          console.error('Error saving favorites to localStorage:', error);\n        }\n      }\n    },\n    removeFavorite: (state, action: PayloadAction<string>) => {\n      const locationId = action.payload;\n      state.favoriteLocations = state.favoriteLocations.filter(location => location.id !== locationId);\n      try {\n        localStorage.setItem(FAVORITES_STORAGE_KEY, JSON.stringify(state.favoriteLocations));\n      } catch (error) {\n        console.error('Error saving favorites to localStorage:', error);\n      }\n    },\n  },\n});\n\n// Export actions and reducer\nexport const { initializePreferences, toggleTheme, addFavorite, removeFavorite } = userPreferencesSlice.actions;\nexport default userPreferencesSlice.reducer;\n\n// Selectors\nexport const selectTheme = (state: { userPreferences: UserPreferencesState }) => state.userPreferences.theme;\nexport const selectFavoriteLocations = (state: { userPreferences: UserPreferencesState }) => state.userPreferences.favoriteLocations;\nexport const selectIsLoaded = (state: { userPreferences: UserPreferencesState }) => state.userPreferences.isLoaded;\nexport const selectIsFavorite = (state: { userPreferences: UserPreferencesState }, locationId: string) => \n  state.userPreferences.favoriteLocations.some(location => location.id === locationId);\n","import React from 'react';\nimport { IconButton, Tooltip, useTheme as useMuiTheme } from '@mui/material';\nimport { Favorite as FavoriteIcon, FavoriteBorder as FavoriteBorderIcon } from '@mui/icons-material';\nimport { useAppSelector, useAppDispatch } from '../../../store/hooks';\nimport { selectIsFavorite, addFavorite, removeFavorite } from '../../../store/slices/userPreferencesSlice';\nimport { Location } from '../../../components/maps/types';\nimport { useDeviceDetect } from '../../../hooks/useDeviceDetect';\n\ninterface FavoriteButtonProps {\n  location: Location;\n  size?: 'small' | 'medium' | 'large';\n  showTooltip?: boolean;\n  color?: string;\n}\n\nconst ReduxFavoriteButton: React.FC<FavoriteButtonProps> = ({\n  location,\n  size = 'medium',\n  showTooltip = true,\n  color = 'error',\n}) => {\n  const dispatch = useAppDispatch();\n  const isFav = useAppSelector(state => selectIsFavorite(state, location.id));\n  const muiTheme = useMuiTheme();\n  const { isMobile } = useDeviceDetect();\n  \n  const handleToggleFavorite = (event: React.MouseEvent) => {\n    event.stopPropagation();\n    if (isFav) {\n      dispatch(removeFavorite(location.id));\n    } else {\n      dispatch(addFavorite(location));\n    }\n  };\n\n  const button = (\n    <IconButton\n      onClick={handleToggleFavorite}\n      size={size}\n      aria-label={isFav ? 'Remove from favorites' : 'Add to favorites'}\n      sx={{\n        color: isFav ? muiTheme.palette[color as 'error'].main : 'inherit',\n        transition: muiTheme.transitions.create(['color'], {\n          duration: muiTheme.transitions.duration.short,\n        }),\n      }}\n    >\n      {isFav ? <FavoriteIcon /> : <FavoriteBorderIcon />}\n    </IconButton>\n  );\n\n  if (!showTooltip || isMobile) {\n    return button;\n  }\n\n  return (\n    <Tooltip title={isFav ? 'Remove from favorites' : 'Add to favorites'}>\n      {button}\n    </Tooltip>\n  );\n};\n\nexport default ReduxFavoriteButton;\n","import React from 'react';\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  CardActions,\n  Typography,\n  Button,\n  Box,\n  Chip,\n  Divider,\n} from '@mui/material';\nimport { DirectionsWalk as DirectionsIcon, Place as PlaceIcon } from '@mui/icons-material';\nimport { Location } from '../../../components/maps/types';\nimport ReduxFavoriteButton from '../FavoriteButton/ReduxFavoriteButton';\nimport { useDeviceDetect } from '../../../hooks/useDeviceDetect';\n\ninterface LocationCardProps {\n  location: Location;\n  onClick?: (location: Location) => void;\n  onGetDirections?: (location: Location) => void;\n  selected?: boolean;\n}\n\nconst ReduxLocationCard: React.FC<LocationCardProps> = ({\n  location,\n  onClick,\n  onGetDirections,\n  selected = false,\n}) => {\n  const { isMobile } = useDeviceDetect();\n\n  const handleClick = () => {\n    if (onClick) {\n      onClick(location);\n    }\n  };\n\n  const handleGetDirections = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    if (onGetDirections) {\n      onGetDirections(location);\n    } else {\n      // Default directions handler\n      if (location.address) {\n        window.open(\n          `https://www.google.com/maps/dir/?api=1&destination=${encodeURIComponent(\n            location.address\n          )}`,\n          '_blank'\n        );\n      } else if (location.position) {\n        window.open(\n          `https://www.google.com/maps/dir/?api=1&destination=${location.position.lat},${location.position.lng}`,\n          '_blank'\n        );\n      }\n    }\n  };\n\n  return (\n    <Card\n      sx={{\n        display: 'flex',\n        flexDirection: isMobile ? 'column' : 'row',\n        cursor: onClick ? 'pointer' : 'default',\n        '&:hover': {\n          boxShadow: onClick ? 3 : 1,\n        },\n        ...(selected && {\n          border: '2px solid',\n          borderColor: 'primary.main',\n        }),\n      }}\n      onClick={handleClick}\n    >\n      {location.image ? (\n        <CardMedia\n          component=\"img\"\n          sx={{\n            width: isMobile ? '100%' : 150,\n            height: isMobile ? 140 : 150,\n            objectFit: 'cover',\n          }}\n          image={location.image}\n          alt={location.name}\n        />\n      ) : (\n        <Box\n          sx={{\n            width: isMobile ? '100%' : 150,\n            height: isMobile ? 140 : 150,\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            bgcolor: 'action.hover',\n          }}\n        >\n          <PlaceIcon sx={{ fontSize: 48, color: 'text.secondary' }} />\n        </Box>\n      )}\n      <Box sx={{ display: 'flex', flexDirection: 'column', flexGrow: 1 }}>\n        <CardContent>\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start' }}>\n            <Typography variant=\"h6\" component=\"div\" sx={{ pr: 2 }}>\n              {location.name}\n            </Typography>\n            <ReduxFavoriteButton location={location} size=\"small\" />\n          </Box>\n          <Chip\n            label={location.category}\n            size=\"small\"\n            sx={{ textTransform: 'capitalize', mb: 1 }}\n          />\n          {location.address && (\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              {location.address}\n            </Typography>\n          )}\n          {location.description && (\n            <Typography\n              variant=\"body2\"\n              color=\"text.secondary\"\n              sx={{\n                mt: 1,\n                display: '-webkit-box',\n                WebkitLineClamp: 2,\n                WebkitBoxOrient: 'vertical',\n                overflow: 'hidden',\n              }}\n            >\n              {location.description}\n            </Typography>\n          )}\n        </CardContent>\n        <Box sx={{ flexGrow: 1 }} />\n        <Divider />\n        <CardActions>\n          <Button\n            size=\"small\"\n            startIcon={<DirectionsIcon />}\n            onClick={handleGetDirections}\n          >\n            Directions\n          </Button>\n        </CardActions>\n      </Box>\n    </Card>\n  );\n};\n\nexport default ReduxLocationCard;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { useState, useMemo, FC } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Container, Box, Grid, Alert } from '@mui/material';\nimport { Map as MapIcon } from '@mui/icons-material';\nimport ReduxLocationCard from '../components/common/LocationCard/ReduxLocationCard';\nimport { PageHeader, Section } from '../components/common';\nimport { useDeviceDetect } from '../hooks/useDeviceDetect';\nimport ReactGoogleMap from '../components/maps/ReactGoogleMap';\nimport { Location } from '../components/maps/types';\nimport { useAppSelector } from '../redux/hooks';\nimport { selectFavorites } from '../redux/store';\n\nconst FavoritesPage: FC = () => {\n  const { t } = useTranslation();\n  const { isMobile } = useDeviceDetect();\n  const [selectedLocation, setSelectedLocation] = useState<Location | null>(null);\n\n  const favoriteLocations = useAppSelector(selectFavorites);\n\n  // Map FavoriteItem to Location\n  const mappedLocations: Location[] = favoriteLocations.map(favorite => ({\n    ...favorite,\n    position: favorite.position || { lat: 0, lng: 0 }, // Default position\n    category: favorite.category || 'Unknown', // Default category\n  }));\n\n  // Memoize selected location to avoid unnecessary re-renders\n  const memoizedSelectedLocation = useMemo(() => selectedLocation, [selectedLocation]);\n\n  // Handle getting directions to a location\n  const getDirections = (location: Location) => {\n    const destination = location.address\n      ? encodeURIComponent(location.address)\n      : location.position?.lat && location.position?.lng\n        ? `${location.position.lat},${location.position.lng}`\n        : null;\n\n    if (destination) {\n      window.open(`https://www.google.com/maps/dir/?api=1&destination=${destination}`, '_blank');\n    } else {\n      console.error('No valid destination for the selected location.');\n    }\n  };\n\n  // Handle selecting a location to show on the map\n  const handleSelectLocation = (location: Location) => {\n    setSelectedLocation(location);\n  };\n\n  return (\n    <Container maxWidth=\"lg\">\n      <PageHeader\n        title={t('favorites.title', 'Favorite Locations')}\n        subtitle={t('favorites.subtitle', 'Your saved locations in Houston')}\n        data-testid=\"favorites-page-title\"\n      />\n\n      {mappedLocations.length === 0 ? (\n        <Alert severity=\"info\" sx={{ mb: 4 }}>\n          {t('favorites.noFavorites', \"You haven't added any favorite locations yet. Browse the map or search for locations to add them to your favorites.\")}\n        </Alert>\n      ) : (\n        <Grid container spacing={3}>\n          {/* Favorites List */}\n          <Grid item xs={12} md={6}>\n            <Section title={t('favorites.yourFavorites', 'Your Favorites')} titleIcon={<MapIcon color=\"primary\" />}>\n              <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n                {mappedLocations.map(location => (\n                  <ReduxLocationCard\n                    key={location.id}\n                    location={location}\n                    onClick={handleSelectLocation}\n                    onGetDirections={getDirections}\n                    selected={memoizedSelectedLocation?.id === location.id}\n                  />\n                ))}\n              </Box>\n            </Section>\n          </Grid>\n\n          {/* Map */}\n          <Grid item xs={12} md={6}>\n            <Section title={t('favorites.mapView', 'Map View')} titleIcon={<MapIcon color=\"primary\" />}>\n              <ReactGoogleMap\n                locations={memoizedSelectedLocation ? [memoizedSelectedLocation] : mappedLocations}\n                height={isMobile ? 400 : 600}\n                mapId=\"af8bf941f1e27c9d\"\n                zoom={memoizedSelectedLocation ? 15 : 11}\n                center={memoizedSelectedLocation?.position}\n                useCustomIcons={true}\n              />\n            </Section>\n          </Grid>\n        </Grid>\n      )}\n    </Container>\n  );\n};\n\nexport default FavoritesPage;\n"],"names":["THEME_STORAGE_KEY","FAVORITES_STORAGE_KEY","getInitialTheme","savedTheme","prefersDarkMode","_b","_a","error","getInitialFavorites","savedFavorites","initialState","userPreferencesSlice","createSlice","state","action","location","fav","locationId","initializePreferences","toggleTheme","addFavorite","removeFavorite","selectIsFavorite","ReduxFavoriteButton","size","showTooltip","color","dispatch","useAppDispatch","isFav","useAppSelector","muiTheme","useMuiTheme","isMobile","useDeviceDetect","handleToggleFavorite","event","button","jsx","IconButton","FavoriteIcon","FavoriteBorderIcon","Tooltip","ReduxLocationCard","onClick","onGetDirections","selected","handleClick","handleGetDirections","e","jsxs","Card","CardMedia","Box","PlaceIcon","CardContent","Typography","Chip","Divider","CardActions","Button","DirectionsIcon","useSelector","FavoritesPage","t","useTranslation","selectedLocation","setSelectedLocation","useState","mappedLocations","selectFavorites","favorite","memoizedSelectedLocation","useMemo","getDirections","destination","handleSelectLocation","Container","PageHeader","Alert","Grid","Section","MapIcon","ReactGoogleMap"],"mappings":"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"}